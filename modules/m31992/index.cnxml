<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">

<title>Practical 1 - Simple Compilation and Submission</title>
<metadata>
  <md:content-id>m31992</md:content-id><md:title>Practical 1 - Simple Compilation and Submission</md:title>
  <md:abstract>In this module you will gain experience in compiling and submitting a simple code on the Monte Rosa system.</md:abstract>
  <md:uuid>141102e5-59f0-4e87-8f8c-011bb055c62b</md:uuid>
</metadata>

<content>

<section id="eip-954"><title>Introduction</title><para id="eip-746">In this practical you will be required to compile and submit a simple code for execution on <emphasis>Gele</emphasis>. If you require any assistance, please do not hesitate to contact the available support staff.</para><section id="eip-965"><title>Objectives</title><para id="eip-434">The objectives of this practical are to gain experience in:
</para><list id="eip-365" list-type="enumerated" number-style="lower-roman"><item>compiling a code within the Cray Programming Environment</item>
<item>submitting a job to the Gele batch queuing system</item>
<item>interrogating the execution log files</item></list></section>
</section>

<section id="eip-8"><title>Compiling a Simple Code</title><code id="eip-713" display="block"><title>Change to Exercise Directory</title>cd ../Practicals/Practical_1</code><note id="eip-96" type="tip">Each practical will contain source code templates in either <emphasis>Fortran90</emphasis> or <emphasis>C</emphasis> flavours. Please feel free to choose your language of preference for completing the exercises.  </note>

<section id="eip-441"><title>Fortran Example</title><para id="eip-541">For this example, use the template code <emphasis>simple.f90</emphasis> provided in <emphasis>../Practicals/Practical_1/Fortran90</emphasis>
</para><para id="eip-120">Briefly view the Fortran90 source code in your editor e.g.<newline/></para><code id="eip-821" display="block"><title>Using Emacs</title>
emacs simple.f90</code><para id="eip-176">or<newline/></para><code id="eip-705" display="block"><title>Using Vi</title>
vi simple.f90</code><note id="eip-168" type="tip"><label>Source Code Info</label>You will notice that this simple Fortran90 code sums two numbers. </note><exercise id="eip-873"><problem id="eip-192">
  <para id="eip-639">
    Compile the <emphasis>simple.f90</emphasis> code using the Cray Fortran compiler
  </para>
</problem>

<solution id="eip-673">
  <para id="eip-549">
    ftn -o simple simple.f90
  </para>
</solution></exercise></section>

<section id="fs-id4436841"><title>C Example</title><para id="fs-id2452724">For this example, use the template code <emphasis>simple.c</emphasis> provided in <emphasis>../Practicals/Practical_1/C</emphasis>
</para><para id="fs-id5260148">Briefly view the C source code in your editor e.g.<newline/></para><code id="fs-id5409342" display="block"><title>Using Emacs</title>
emacs simple.c</code><para id="fs-id1168521806447">or<newline/></para><code id="fs-id4400090" display="block"><title>Using Vi</title>
vi simple.c</code><note id="fs-id7072463" type="tip"><label>Source Code Info</label>You will notice that the simple C code adds two numbers. </note><exercise id="fs-id1168524811142"><problem id="fs-id1168523533542">
  <para id="fs-id1168527073012">
    Compile the <emphasis>simple.c</emphasis> code using the Cray C compiler
  </para>
</problem>

<solution id="fs-id6928163">
  <para id="fs-id7136307">
    cc -o simple simple.c
  </para>
</solution></exercise></section>
</section>

<section id="eip-200"><title>Submitting a Job</title><exercise id="eip-294"><title>Submit Batch Job</title><problem id="eip-429">
  <para id="eip-139">
    Now submit the <emphasis>simple</emphasis> executable to the batch queue system for scheduling and execution.
  </para>
</problem>

<solution id="eip-130">
  <para id="eip-425">Using your editor, create a job script (called <emphasis>submit.script</emphasis> for instance) as follows:

<code id="fs-id10843713" display="block">#! /bin/bash
#PBS -l mppwidth=1
#PBS -l walltime=00:01:00
#PBS -V
#PBS -q linksceem

set -ex

cd $PBS_O_WORKDIR

aprun -n 1 ./simple

exit
</code>
and submit the script with:
<code id="eip-id1171115519364" display="block">qsub submit.script
</code></para>
</solution>
</exercise></section>

<section id="eip-531"><title>Examining Job Logs</title><exercise id="eip-780"><title>Examining the Job Logs</title><problem id="eip-693">
  <para id="eip-606">
    Once your job has completed execution on the compute nodes, use your editor to view the contents of the job logs. 
  </para>
</problem>

<solution id="eip-943">
  <para id="eip-611">For a job with id #12345: 
<code id="fs-id4966322" display="block">
emacs submit.job.e12345
emacs submit.job.o12345
</code>
If all is well, you should have no errors in the error log (submit.job.e12345) and a print statement detailing the correct addition of the two numbers in the standard output log (submit.job.o12345).
  </para>
</solution>
</exercise></section>

<exercise id="eip-649"><title>Modifying the Source</title><problem id="eip-887">
  <para id="eip-953">
    Modify the <emphasis>simple</emphasis> source code by changing the values of the two numbers to be summed. Re-compile and submit your new job. Verify that the output is correct and no errors appear in the job log.
  </para>
</problem></exercise>

</content>

</document>